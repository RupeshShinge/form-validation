{"version":3,"sources":["components/FormInput.js","App.js","reportWebVitals.js","index.js"],"names":["FormInput","props","useState","focused","setFocused","label","errorMessage","onChange","inputProps","id","className","onBlur","e","onFocus","name","toString","App","username","email","birthday","password","confirmPassword","values","setValues","inputs","type","placeholder","pattern","required","target","value","onSubmit","preventDefault","map","input","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUA4BeA,EAzBG,SAACC,GACjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAqDJ,EAArDI,MAAOC,EAA8CL,EAA9CK,aAAcC,EAAgCN,EAAhCM,SAAiBC,GAAeP,EAAtBQ,GAAvC,YAA6DR,EAA7D,IAMA,OACE,sBAAKS,UAAU,YAAf,UACE,gCAAQL,IACR,iDACMG,GADN,IAEED,SAAUA,EACVI,OAVc,SAACC,GACnBR,GAAW,IAUPS,QAAS,iBACa,oBAApBL,EAAWM,MAA8BV,GAAW,IAEtDD,QAASA,EAAQY,cAEnB,+BAAOT,QCmEEU,MAtFf,WACE,MAA4Bd,mBAAS,CACnCe,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,gBAAiB,KALnB,mBAAOC,EAAP,KAAeC,EAAf,KAQMC,EAAS,CACb,CACEf,GAAI,EACJK,KAAM,WACNW,KAAM,OACNC,YAAa,WACbpB,aACE,kFACFD,MAAO,WACPsB,QAAS,sBACTC,UAAU,GAEZ,CACEnB,GAAI,EACJK,KAAM,QACNW,KAAM,QACNC,YAAa,QACbpB,aAAc,sCACdD,MAAO,QACPuB,UAAU,GAEZ,CACEnB,GAAI,EACJK,KAAM,WACNW,KAAM,OACNC,YAAa,WACbrB,MAAO,YAET,CACEI,GAAI,EACJK,KAAM,WACNW,KAAM,WACNC,YAAa,WACbpB,aACE,sGACFD,MAAO,WACPsB,QAAQ,uEACRC,UAAU,GAEZ,CACEnB,GAAI,EACJK,KAAM,kBACNW,KAAM,WACNC,YAAa,mBACbpB,aAAc,yBACdD,MAAO,mBACPsB,QAASL,EAAOF,SAChBQ,UAAU,IAQRrB,EAAW,SAACK,GAChBW,EAAU,2BAAKD,GAAN,kBAAeV,EAAEiB,OAAOf,KAAOF,EAAEiB,OAAOC,UAGnD,OACE,qBAAKpB,UAAU,MAAf,SACE,uBAAMqB,SAVW,SAACnB,GACpBA,EAAEoB,kBASA,UACE,0CACCR,EAAOS,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,2BAEMA,GAFN,IAGEJ,MAAOR,EAAOY,EAAMpB,MACpBP,SAAUA,IAHL2B,EAAMzB,OAMf,kDCxEO0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac1973b6.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./formInput.css\";\r\n\r\nconst FormInput = (props) => {\r\n  const [focused, setFocused] = useState(false);\r\n  const { label, errorMessage, onChange, id, ...inputProps } = props;\r\n\r\n  const handleFocus = (e) => {\r\n    setFocused(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"formInput\">\r\n      <label>{label}</label>\r\n      <input\r\n        {...inputProps}\r\n        onChange={onChange}\r\n        onBlur={handleFocus}\r\n        onFocus={() =>\r\n          inputProps.name === \"confirmPassword\" && setFocused(true)\r\n        }\r\n        focused={focused.toString()}\r\n      />\r\n      <span>{errorMessage}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { useState } from 'react';\nimport './App.css';\nimport FormInput from './components/FormInput';\n\nfunction App() {\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    birthday: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Username\",\n      errorMessage:\n        \"Username should be 3-16 characters and shouldn't include any special character!\",\n      label: \"Username\",\n      pattern: \"^[A-Za-z0-9]{3,16}$\",\n      required: true,\n    },\n    {\n      id: 2,\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      errorMessage: \"It should be a valid email address!\",\n      label: \"Email\",\n      required: true,\n    },\n    {\n      id: 3,\n      name: \"birthday\",\n      type: \"date\",\n      placeholder: \"Birthday\",\n      label: \"Birthday\",\n    },\n    {\n      id: 4,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      errorMessage:\n        \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n      label: \"Password\",\n      pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n      required: true,\n    },\n    {\n      id: 5,\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      errorMessage: \"Passwords don't match!\",\n      label: \"Confirm Password\",\n      pattern: values.password,\n      required: true,\n    },\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const onChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"app\">\n      <form onSubmit={handleSubmit}>\n        <h1>Register</h1>\n        {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            {...input}\n            value={values[input.name]}\n            onChange={onChange}\n          />\n        ))}\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}